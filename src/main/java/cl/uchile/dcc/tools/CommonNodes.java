package cl.uchile.dcc.tools;

import org.apache.jena.graph.Node;
import org.apache.jena.graph.NodeFactory;

public class CommonNodes {
    public static final String URI = "http://example.org/";
    public static final Node typeNode = NodeFactory.createURI(URI + "type");
    public static final Node tpNode = NodeFactory.createURI(URI + "TP");
    public static final Node argNode = NodeFactory.createURI(URI + "arg");
    public static final Node subjectNode = NodeFactory.createURI(URI + "subject");
    public static final Node preNode = NodeFactory.createURI(URI + "predicate");
    public static final Node objNode = NodeFactory.createURI(URI + "object");
    public static final Node joinNode = NodeFactory.createURI(URI + "join");
    public static final Node unionNode = NodeFactory.createURI(URI + "union");
    public static final Node projectNode = NodeFactory.createURI(URI + "projection");
    public static final Node askNode = NodeFactory.createURI(URI + "ask");
    public static final Node constructNode = NodeFactory.createURI(URI + "construct");
    public static final Node describeNode = NodeFactory.createURI(URI + "describe");
    public static final Node opNode = NodeFactory.createURI(URI + "OP");
    public static final Node subNode = NodeFactory.createURI(URI + "subOp");
    public static final Node limitNode = NodeFactory.createURI(URI + "limit");
    public static final Node offsetNode = NodeFactory.createURI(URI + "offset");
    public static final Node orderByNode = NodeFactory.createURI(URI + "orderBy");
    public static final Node varNode = NodeFactory.createURI(URI + "var");
    public static final Node orderNode = NodeFactory.createURI(URI + "order");
    public static final Node valueNode = NodeFactory.createURI(URI + "value");
    public static final Node dirNode = NodeFactory.createURI(URI + "direction");
    public static final Node patternNode = NodeFactory.createURI(URI + "pattern");
    public static final Node modNode = NodeFactory.createURI(URI + "modifier");
    public static final Node filterNode = NodeFactory.createURI(URI + "filter");
    public static final Node functionNode = NodeFactory.createURI(URI + "function");
    public static final Node andNode = NodeFactory.createURI(URI + "and");
    public static final Node orNode = NodeFactory.createURI(URI + "or");
    public static final Node notNode = NodeFactory.createURI(URI + "not");
    public static final Node optionalNode = NodeFactory.createURI(URI + "optional");
    public static final Node leftNode = NodeFactory.createURI(URI + "left");
    public static final Node rightNode = NodeFactory.createURI(URI + "right");
    public static final Node fromNode = NodeFactory.createURI(URI + "from");
    public static final Node fromNamedNode = NodeFactory.createURI(URI + "fromNamed");
    public static final Node graphNode = NodeFactory.createURI(URI + "graph");
    public static final Node distinctNode = NodeFactory.createURI(URI + "distinct");
    public static final Node reducedNode = NodeFactory.createURI(URI + "reduced");
    public static final Node tempNode = NodeFactory.createURI(URI + "temp");
    public static final Node extendNode = NodeFactory.createURI(URI + "extend");
    public static final Node bindNode = NodeFactory.createURI(URI + "binding");
    public static final Node tableNode = NodeFactory.createURI(URI + "table");
    public static final Node groupByNode = NodeFactory.createURI(URI + "group");
    public static final Node aggregateNode = NodeFactory.createURI(URI + "aggregate");
    public static final Node minusNode = NodeFactory.createURI(URI + "minus");
    public static final Node extraNode = NodeFactory.createURI(URI + "extra");
    public static final Node triplePathNode = NodeFactory.createURI(URI + "triplePath");
    public static final Node pathNode = NodeFactory.createURI(URI + "path");
    public static final Node serviceNode = NodeFactory.createURI(URI + "service");
    public static final Node silentNode = NodeFactory.createURI(URI + "silent");
    public static final Node idNode = NodeFactory.createURI(URI + "id");
    public static final Node epsilon = NodeFactory.createURI(URI + "epsilon");
    public static final Node finalNode = NodeFactory.createURI(URI + "final");
}
